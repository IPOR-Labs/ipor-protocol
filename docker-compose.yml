version: "3.9"

services:

  ############################################ COCKPIT ############################################

  ipor-cockpit:
    container_name: ipor-cockpit
    image: "${IPOR_COCKPIT_DOCKER_IMAGE}"
    profiles:
      - cockpit
      - cockpit-provider
      - developer
      - all
    restart: always
    ports:
      - "4000:3000"
    volumes:
      - ./app/.env:/usr/src/.env
    environment:
      - TZ=${TIMEZONE}

  ############################################ BLOCKCHAIN ############################################

  ipor-protocol-eth-bc:
    container_name: ipor-protocol-eth-bc
    image: "${ETH_BC_DOCKER_IMAGE}"
    profiles:
      - eth-bc-and-explorer
      - eth-bc
      - eth-bc-provider
      - developer
      - all
    restart: always
    ports:
      - "9545:8545"   # HTTP-RPC server
      - "9546:8546"   # WS-RPC server
      - "9547:8547"   # GraphQL
      - "${ETH_BC_NETWORK_PORT}:${ETH_BC_NETWORK_PORT}" # Network
    entrypoint:
      - ./geth-entrypoint.sh
      - run-geth
    volumes:
      - ipor-protocol-eth-bc-data:/root
      - ./containers/eth-bc/geth-entrypoint.sh:/geth-entrypoint.sh
      - ./containers/eth-bc/envs/${ENV_PROFILE}/genesis.json:/genesis.json
      - ./containers/eth-bc/envs/${ENV_PROFILE}/geth-config.toml:/geth-config.toml
      - ./containers/eth-bc/envs/${ENV_PROFILE}/miner.key:/miner.key
      - ./containers/eth-bc/envs/${ENV_PROFILE}/key-password.txt:/key-password.txt
    environment:
      - TZ=${TIMEZONE}
      - ETH_BC_CORS=${ETH_BC_CORS}
      - ETH_BC_HOST_ADDRESS=${ETH_BC_HOST_ADDRESS}
      - ETH_BC_MINER_ADDRESS=${ETH_BC_MINER_ADDRESS}
      - ETH_BC_NETWORK_PORT=${ETH_BC_NETWORK_PORT}
      - ETH_BC_DATA_DIR=${ETH_BC_DATA_DIR}
      - ETH_BC_GENESIS_BLOCK_FILE=${ETH_BC_GENESIS_BLOCK_FILE}
      - ETH_BC_CONFIG_FILE=${ETH_BC_CONFIG_FILE}
      - ETH_BC_MINER_KEY_PASSWORD_FILE=${ETH_BC_MINER_KEY_PASSWORD_FILE}
      - ETH_BC_MINER_KEY_FILE=${ETH_BC_MINER_KEY_FILE}
      - ETH_BC_MINER_THREADS=${ETH_BC_MINER_THREADS}
      - ETH_BC_NETWORK_ID=${ETH_BC_NETWORK_ID}
      - ETH_BC_BLOCK_PERIOD=${ETH_BC_BLOCK_PERIOD}
      - ETH_BC_BLOCK_GAS_LIMIT=${ETH_BC_BLOCK_GAS_LIMIT}
      - ETH_BC_NODE_MODE=${ETH_BC_NODE_MODE}
      - ETH_BC_NODE_NAME=${ETH_BC_NODE_NAME}
      - ETH_BC_HTTP_API=${ETH_BC_HTTP_API}
      - ETH_BC_WS_API=${ETH_BC_WS_API}
      - ETH_BC_VERBOSITY=${ETH_BC_VERBOSITY}
      - ETH_BC_VMODULE_VERBOSITY=${ETH_BC_VMODULE_VERBOSITY}
      - ETH_BC_INIT_GENESIS_BLOCK=${ETH_BC_INIT_GENESIS_BLOCK}

  ############################################ SSL ############################################

  ipor-protocol-nginx:
    container_name: ipor-protocol-nginx
    image: nginx:1.21.1
    profiles:
      - ssl-eth-bc
      - cockpit-provider
      - all
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./containers/nginx/envs/${ENV_PROFILE}/nginx.conf:/etc/nginx/nginx.conf
      - ./containers/nginx/envs/${ENV_PROFILE}/nginx.api-proxy.conf:/etc/nginx/nginx.api-proxy.conf
      - ./containers/nginx/envs/${ENV_PROFILE}/htpasswd.users:/etc/nginx/htpasswd.users
      - ./containers/nginx/errors:/usr/share/nginx/html/errors
      - ./containers/nginx/envs/${ENV_PROFILE}/cert:/etc/nginx/cert
      - ./containers/logs/nginx:/var/log/nginx
    environment:
      - TZ=${TIMEZONE}
    depends_on:
      - ipor-cockpit

  ipor-protocol-nginx-eth-bc:
    container_name: ipor-protocol-nginx-eth-bc
    image: ipor-nginx-eth-bc:latest
    profiles:
      - ssl-eth-bc
      - eth-bc-provider
      - all
    restart: always
    ports:
      - "${ETH_BC_HTTP_PORT}:${ETH_BC_HTTP_PORT}"
      - "${ETH_BC_WS_PORT}:${ETH_BC_WS_PORT}"
    volumes:
      - ./containers/nginx-eth-bc/envs/${ENV_PROFILE}/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ./containers/nginx-eth-bc/envs/${ENV_PROFILE}/nginx.api-proxy.conf:/etc/nginx/nginx.api-proxy.conf
      - ./containers/nginx-eth-bc/envs/${ENV_PROFILE}/htpasswd.users:/etc/nginx/htpasswd.users
      - ./containers/nginx-eth-bc/errors:/usr/share/nginx/html/errors
      - ./containers/nginx-eth-bc/envs/${ENV_PROFILE}/cert:/etc/nginx/cert
      - ./containers/nginx-eth-bc/envs/${ENV_PROFILE}/keys:/etc/nginx/keys
      - ./containers/logs/nginx-eth-bc:/var/log/nginx
    environment:
      - TZ=${TIMEZONE}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - ipor-protocol-eth-bc

  ############################################ EXPLORER ############################################

  ipor-protocol-eth-explorer:
    container_name: ipor-protocol-eth-explorer
    image: blockscout/blockscout-mainnet:4.0.1-pre-16
    profiles:
      - explorer
      - eth-bc-and-explorer
      - eth-explorer-provider
      - developer
      - all
    command: /blockscout-entrypoint.sh
    restart: always
    ports:
      - "9055:4000"
    volumes:
      - ./containers/eth-bc-explorer/blockscout-entrypoint.sh:/blockscout-entrypoint.sh
    environment:
      - TZ=${TIMEZONE}
      - ETHEREUM_JSONRPC_VARIANT=${BS_ETHEREUM_JSONRPC_VARIANT}
      - ETHEREUM_JSONRPC_HTTP_URL=${BS_ETHEREUM_JSONRPC_HTTP_URL}
      - ETHEREUM_JSONRPC_TRACE_URL=${BS_ETHEREUM_JSONRPC_HTTP_URL}
      - ETHEREUM_JSONRPC_WS_URL=${BS_ETHEREUM_JSONRPC_WS_URL}
      - DATABASE_URL=${BS_DATABASE_URL}
      - BLOCKSCOUT_PROTOCOL=${BS_PROTOCOL}
      - BLOCKSCOUT_HOST=${BS_HOST}
      - CHAIN_ID=${ETH_BC_NETWORK_ID}
      - SUBNETWORK=${BS_NETWORK_NAME}
      - SUPPORTED_CHAINS=${BS_NETWORK_NAME}
      - COIN=ETH
      - NETWORK=ETH
      - ENABLE_1559_SUPPORT=true
      - BLOCK_TRANSFORMER=clique
      - LINK_TO_OTHER_EXPLORERS=false
      - ETHEREUM_JSONRPC_TRANSPORT=http
      - CHECK_ORIGIN=false
      - PORT=4000
    depends_on:
      - ipor-protocol-eth-exp-postgres

  ipor-protocol-eth-exp-postgres:
    container_name: ipor-protocol-eth-exp-postgres
    image: postgres:12.5-alpine
    profiles:
      - explorer
      - eth-bc-and-explorer
      - eth-explorer-provider
      - developer
      - all
    restart: always
    ports:
      - "9432:5432"
    volumes:
      - ipor-protocol-eth-exp-postgres-data:/var/lib/postgresql/data
    environment:
      - TZ=${TIMEZONE}
      - POSTGRES_USER=${BS_POSTGRES_USER}
      - POSTGRES_PASSWORD=${BS_POSTGRES_PASSWORD}
      - POSTGRES_DB=${BS_POSTGRES_DB}

  ipor-protocol-nginx-eth-exp:
    container_name: ipor-protocol-nginx-eth-exp
    image: nginx:1.21.4-alpine
    profiles:
      - ssl-explorer
      - eth-explorer-provider
      - all
    restart: always
    ports:
      - "${BS_NGINX_HTTP_PORT}:80"
      - "${BS_NGINX_HTTPS_PORT}:443"
    volumes:
      - ./containers/nginx-eth-explorer/envs/${ENV_PROFILE}/nginx.conf:/etc/nginx/nginx.conf
      - ./containers/nginx-eth-explorer/envs/${ENV_PROFILE}/nginx.api-proxy.conf:/etc/nginx/nginx.api-proxy.conf
      - ./containers/nginx-eth-explorer/envs/${ENV_PROFILE}/htpasswd.users:/etc/nginx/htpasswd.users
      - ./containers/nginx-eth-explorer/errors:/usr/share/nginx/html/errors
      - ./containers/nginx-eth-explorer/envs/${ENV_PROFILE}/cert:/etc/nginx/cert
      - ./containers/logs/nginx-eth-explorer:/var/log/nginx
    environment:
      - TZ=${TIMEZONE}
    depends_on:
      - ipor-protocol-eth-explorer

volumes:
  ipor-protocol-eth-bc-data:
    name: ipor-protocol-eth-bc-data
    driver: local
  ipor-protocol-eth-exp-postgres-data:
    name: ipor-protocol-eth-exp-postgres-data
    driver: local
