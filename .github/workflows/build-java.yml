name: Build java

on:
    workflow_call:
        secrets:
            CI_GITHUB_ACTOR:
                required: false
            CI_GITHUB_TOKEN:
                required: false
            AWS_ACCESS_KEY_ID:
                required: false
            AWS_SECRET_ACCESS_KEY:
                required: false
            AWS_ACCOUNT_ID:
                required: false
            MAINNET_AWS_ACCESS_KEY_ID:
                required: false
            MAINNET_AWS_SECRET_ACCESS_KEY:
                required: false
            MAINNET_AWS_ACCOUNT_ID:
                required: false

        inputs:
            java-version:
                description: "Java SDK compiler version"
                type: string
                default: 11

            mvn-version:
                description: "Maven version"
                type: string
                default: 3.8.4

            solc-version:
                description: "Solidity complier version"
                type: string
                default: 0.8.16

            ecr-repository-name:
                description: "AWS ECR repository name for target docker image"
                type: string

            docker-image-extra-tags:
                description: "Additional docker image tags to be added to the pushed image, separated by a comma"
                type: string
                default: latest

            smart-contracts-compile-enabled:
                description: "Enable smart contracts compile"
                type: boolean
                default: false

            build-enabled:
                description: "Enable build"
                type: boolean
                default: true

            tests-enabled:
                description: "Enable tests"
                type: boolean
                default: true

            publish-jar-enabled:
                description: "Enable publish java jar artifacts"
                type: boolean
                default: false

            push-docker-enabled:
                description: "Enable push docker artifacts"
                type: boolean
                default: false

            push-docker-mainnet-enabled:
                description: "Enable push docker artifacts to mainnet"
                type: boolean
                default: false

            ecr-login-enabled:
                description: "Enable ECR login"
                type: boolean
                default: false

            aws-region:
                description: "AWS region used in ECR commands"
                type: string
                default: eu-central-1

jobs:
    java:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Set up solidity compiler
              if: inputs.smart-contracts-compile-enabled
              run: |
                  python -m pip install --upgrade --no-cache-dir solc-select
                  solc-select install ${{ inputs.solc-version }}
                  solc-select use ${{ inputs.solc-version }}
              shell: bash

            - name: Set up java
              # from tag: v3.10.0
              uses: actions/setup-java@3f07048e3d294f56e9b90ac5ea2c6f74e9ad0f98
              with:
                  java-version: ${{ inputs.java-version }}
                  distribution: temurin
                  server-id: github
                  settings-path: ${{ github.workspace }}

            - name: Set up maven
              # from tag: v4.5
              uses: stCarolas/setup-maven@07fbbe97d97ef44336b7382563d66743297e442f
              with:
                  maven-version: ${{ inputs.mvn-version }}

            - name: Checkout
              # from tag: v3.5.0
              uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3

            - name: Set up maven repository cache
              # from tag: v3.3.1
              uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
              with:
                  path: ~/.m2/repository
                  key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

            - name: Set up node_modules cache
              if: inputs.smart-contracts-compile-enabled
              # from tag: v3.3.1
              uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
              with:
                  path: "**/node_modules"
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

            - name: Set up node_modules
              if: inputs.smart-contracts-compile-enabled
              run: npm install

            - name: Set up AWS credentials
              if: inputs.ecr-login-enabled
              # from tag: v2.0.0
              uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ inputs.aws-region }}

            - name: Login to ECR
              if: inputs.ecr-login-enabled
              id: login-ecr
              # from tag: v1.5.3
              uses: aws-actions/amazon-ecr-login@261a7de32bda11ba01f4d75c4ed6caf3739e54be

            - name: Build
              if: inputs.build-enabled
              run: mvn clean package -B -ntp -s '${{ github.workspace }}/settings.xml' -DskipTests -DskipITs --update-snapshots
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CI_GITHUB_ACTOR: ${{ secrets.CI_GITHUB_ACTOR }}
                  CI_GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

            - name: Tests
              if: inputs.tests-enabled
              run: mvn test -B -ntp -s '${{ github.workspace }}/settings.xml'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CI_GITHUB_ACTOR: ${{ secrets.CI_GITHUB_ACTOR }}
                  CI_GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

            - name: Publish jars
              if: inputs.publish-jar-enabled
              run: mvn deploy -B -ntp -s '${{ github.workspace }}/settings.xml' -DskipTests -DskipITs
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CI_GITHUB_ACTOR: ${{ secrets.CI_GITHUB_ACTOR }}
                  CI_GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

            - name: Push docker
              if: inputs.push-docker-enabled
              # from tag: v4
              uses: docker://ghcr.io/kciter/aws-ecr-action@sha256:fb211ece872fdfb5be4c6cb731765967b081a72c3ef3944d4f0d15e7d885d1e8
              with:
                  access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  account_id: ${{ secrets.AWS_ACCOUNT_ID }}
                  repo: ${{ inputs.ecr-repository-name }}
                  region: ${{ inputs.aws-region }}
                  tags: ${{ github.sha }},${{ inputs.docker-image-extra-tags }}

            - name: Push mainnet
              if: inputs.push-docker-mainnet-enabled
              # from tag: v4
              uses: docker://ghcr.io/kciter/aws-ecr-action@sha256:fb211ece872fdfb5be4c6cb731765967b081a72c3ef3944d4f0d15e7d885d1e8
              with:
                  access_key_id: ${{ secrets.MAINNET_AWS_ACCESS_KEY_ID }}
                  secret_access_key: ${{ secrets.MAINNET_AWS_SECRET_ACCESS_KEY }}
                  account_id: ${{ secrets.MAINNET_AWS_ACCOUNT_ID }}
                  repo: ${{ inputs.ecr-repository-name }}
                  region: ${{ inputs.aws-region }}
                  tags: ${{ github.sha }},${{ inputs.docker-image-extra-tags }}
